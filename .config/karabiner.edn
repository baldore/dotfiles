;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any


;; Docs
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/examples.org

{
 :profiles {
            :Default {  :default true
                      :sim     50     ;; simultaneous_threshold_milliseconds (def: 50)
                      ;; keys need to be pressed within this threshold to be considered simultaneous
                      :delay   200    ;; to_delayed_action_delay_milliseconds (def: 500)
                      ;;
                      :alone   500    ;; to_if_alone_timeout_milliseconds (def: 1000)
                      ;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
                      :held    1000   ;; to_if_held_down_threshold_milliseconds (def: 500)
                      ;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
                      }
            } ;; profiles

 :templates {:open "open \"%s\""}
 :simlayers {;; make w key a simlayer key
             ;; layers works too, but only recommended for none typing keys
             ;; like . , tab
             ;; or keys like z, which used less often
             :launch-mode {:key :l}}
 :main [
        {:des   "caps_lock to esc when pressed alone, to ctrl as modifier"
         :rules [[:##caps_lock :left_control nil {:alone :escape}]]}

        {:des   "launch mode"
         :rules [:launch-mode
                 [:a [:open "/Applications/Brave Browser.app"]]
                 [:s [:open "/Applications/Slack.app"]]
                 [:d [:open "/Applications/Alacritty.app"]]
                 [:f [:open "/Applications/Obsidian.app"]]
                 ]}

        ]
 }
